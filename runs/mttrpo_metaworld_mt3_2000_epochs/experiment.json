{
  "_snapshotter": {
    "_snapshot_dir": "/home/ubuntu/data/local/experiment/mttrpo_metaworld_mt3",
    "_snapshot_mode": "all",
    "_snapshot_gap": 1,
    "$type": "garage.experiment.snapshotter.Snapshotter"
  },
  "_has_setup": true,
  "_plot": false,
  "_seed": 1,
  "_train_args": {
    "n_epochs": 2000,
    "batch_size": 2048,
    "plot": false,
    "store_episodes": false,
    "pause_for_plot": false,
    "start_epoch": 0,
    "$type": "garage.trainer.TrainArgs"
  },
  "_stats": {
    "total_epoch": 0,
    "total_itr": 0,
    "total_env_steps": 0,
    "last_episode": "None",
    "$type": "garage.trainer.ExperimentStats"
  },
  "_algo": {
    "_discount": 0.99,
    "policy": {
      "training": true,
      "_parameters": {},
      "_buffers": {},
      "_non_persistent_buffers_set": [],
      "_backward_hooks": {},
      "_forward_hooks": {},
      "_forward_pre_hooks": {},
      "_state_dict_hooks": {},
      "_load_state_dict_pre_hooks": {},
      "_modules": {
        "_module": {
          "training": true,
          "_parameters": {
            "_init_std": {
              "$type": "torch.nn.parameter.Parameter"
            }
          },
          "_buffers": {
            "min_std_param": {
              "$type": "torch.Tensor"
            }
          },
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_mean_module": {
              "training": true,
              "_parameters": {},
              "_buffers": {},
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 42.0,
                          "out_features": 64,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    },
                    "1": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 64,
                          "out_features": 64,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                },
                "_output_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 64,
                          "out_features": 4.0,
                          "$type": "torch.nn.modules.linear.Linear"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                }
              },
              "_output_dim": 4.0,
              "$type": "garage.torch.modules.mlp_module.MLPModule"
            }
          },
          "_input_dim": 42.0,
          "_hidden_sizes": [
            64,
            64
          ],
          "_action_dim": 4.0,
          "_learn_std": true,
          "_std_hidden_sizes": [
            32,
            32
          ],
          "_min_std": 1e-06,
          "_max_std": "None",
          "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
          "_std_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_std_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_std_output_nonlinearity": "None",
          "_std_output_w_init": {
            "$type": "builtins.function"
          },
          "_std_parameterization": "exp",
          "_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
          "_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_output_nonlinearity": "None",
          "_output_w_init": {
            "$type": "builtins.function"
          },
          "_output_b_init": {
            "$type": "builtins.function"
          },
          "_layer_normalization": false,
          "_norm_dist_class": {
            "$typename": "torch.distributions.normal.Normal"
          },
          "_min_std_param": {
            "$type": "torch.Tensor"
          },
          "_max_std_param": "None",
          "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
        }
      },
      "_env_spec": {
        "max_episode_length": 500,
        "input_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "_shape": [
            4
          ],
          "low": "array([-1., -1., -1., -1.], dtype=float32)",
          "high": "array([1., 1., 1., 1.], dtype=float32)",
          "low_repr": "-1.0",
          "high_repr": "1.0",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "output_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "_shape": [
            42
          ],
          "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
          "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
          "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
          "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "$type": "garage._environment.EnvSpec"
      },
      "_name": "GaussianMLPPolicy",
      "_obs_dim": 42.0,
      "_action_dim": 4.0,
      "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
    },
    "max_episode_length": 500,
    "_value_function": {
      "training": true,
      "_parameters": {},
      "_buffers": {},
      "_non_persistent_buffers_set": [],
      "_backward_hooks": {},
      "_forward_hooks": {},
      "_forward_pre_hooks": {},
      "_state_dict_hooks": {},
      "_load_state_dict_pre_hooks": {},
      "_modules": {
        "module": {
          "training": true,
          "_parameters": {
            "_init_std": {
              "$type": "torch.nn.parameter.Parameter"
            }
          },
          "_buffers": {},
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_mean_module": {
              "training": true,
              "_parameters": {},
              "_buffers": {},
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 42.0,
                          "out_features": 32,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    },
                    "1": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 32,
                          "out_features": 32,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                },
                "_output_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 32,
                          "out_features": 1,
                          "$type": "torch.nn.modules.linear.Linear"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                }
              },
              "_output_dim": 1,
              "$type": "garage.torch.modules.mlp_module.MLPModule"
            }
          },
          "_input_dim": 42.0,
          "_hidden_sizes": [
            32,
            32
          ],
          "_action_dim": 1,
          "_learn_std": true,
          "_std_hidden_sizes": [
            32,
            32
          ],
          "_min_std": "None",
          "_max_std": "None",
          "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
          "_std_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_std_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_std_output_nonlinearity": "None",
          "_std_output_w_init": {
            "$type": "builtins.function"
          },
          "_std_parameterization": "exp",
          "_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
          "_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_output_nonlinearity": "None",
          "_output_w_init": {
            "$type": "builtins.function"
          },
          "_output_b_init": {
            "$type": "builtins.function"
          },
          "_layer_normalization": false,
          "_norm_dist_class": {
            "$typename": "torch.distributions.normal.Normal"
          },
          "_min_std_param": "None",
          "_max_std_param": "None",
          "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
        }
      },
      "_mdp_spec": {
        "max_episode_length": 500,
        "input_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "_shape": [
            4
          ],
          "low": "array([-1., -1., -1., -1.], dtype=float32)",
          "high": "array([1., 1., 1., 1.], dtype=float32)",
          "low_repr": "-1.0",
          "high_repr": "1.0",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "output_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "_shape": [
            42
          ],
          "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
          "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
          "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
          "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "$type": "garage._environment.EnvSpec"
      },
      "name": "GaussianMLPValueFunction",
      "$type": "garage.torch.value_functions.gaussian_mlp_value_function.GaussianMLPValueFunction"
    },
    "_gae_lambda": 0.95,
    "_center_adv": true,
    "_positive_adv": false,
    "_policy_ent_coeff": 0.0,
    "_use_softplus_entropy": false,
    "_stop_entropy_gradient": false,
    "_entropy_method": "no_entropy",
    "_n_samples": 1,
    "_env_spec": {
      "max_episode_length": 500,
      "input_space": {
        "dtype": "dtype('float32')",
        "bounded_below": "array([ True,  True,  True,  True])",
        "bounded_above": "array([ True,  True,  True,  True])",
        "_shape": [
          4
        ],
        "low": "array([-1., -1., -1., -1.], dtype=float32)",
        "high": "array([1., 1., 1., 1.], dtype=float32)",
        "low_repr": "-1.0",
        "high_repr": "1.0",
        "_np_random": "None",
        "$type": "akro.box.Box"
      },
      "output_space": {
        "dtype": "dtype('float32')",
        "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
        "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
        "_shape": [
          42
        ],
        "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
        "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
        "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
        "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
        "_np_random": "None",
        "$type": "akro.box.Box"
      },
      "$type": "garage._environment.EnvSpec"
    },
    "_maximum_entropy": false,
    "_entropy_regularzied": false,
    "_episode_reward_mean": [],
    "_sampler": {
      "_worker_factory": {
        "n_workers": 2,
        "_seed": "None",
        "_max_episode_length": 500,
        "_worker_class": {
          "$typename": "garage.sampler.default_worker.DefaultWorker"
        },
        "_worker_args": {},
        "$type": "garage.sampler.worker_factory.WorkerFactory"
      },
      "_sampler_worker": {
        "__ray_metadata__": "<ray.actor._ActorClassMetadata object at 0x7f2e4bbb6430>",
        "_default_options": {},
        "$type": "garage.sampler.ray_sampler.ActorClass(SamplerWorker)"
      },
      "_agents": {
        "training": true,
        "_parameters": {},
        "_buffers": {},
        "_non_persistent_buffers_set": [],
        "_backward_hooks": {},
        "_forward_hooks": {},
        "_forward_pre_hooks": {},
        "_state_dict_hooks": {},
        "_load_state_dict_pre_hooks": {},
        "_modules": {
          "_module": {
            "training": true,
            "_parameters": {
              "_init_std": {
                "$type": "torch.nn.parameter.Parameter"
              }
            },
            "_buffers": {
              "min_std_param": {
                "$type": "torch.Tensor"
              }
            },
            "_non_persistent_buffers_set": [],
            "_backward_hooks": {},
            "_forward_hooks": {},
            "_forward_pre_hooks": {},
            "_state_dict_hooks": {},
            "_load_state_dict_pre_hooks": {},
            "_modules": {
              "_mean_module": {
                "training": true,
                "_parameters": {},
                "_buffers": {},
                "_non_persistent_buffers_set": [],
                "_backward_hooks": {},
                "_forward_hooks": {},
                "_forward_pre_hooks": {},
                "_state_dict_hooks": {},
                "_load_state_dict_pre_hooks": {},
                "_modules": {
                  "_layers": {
                    "training": true,
                    "_parameters": {},
                    "_buffers": {},
                    "_non_persistent_buffers_set": [],
                    "_backward_hooks": {},
                    "_forward_hooks": {},
                    "_forward_pre_hooks": {},
                    "_state_dict_hooks": {},
                    "_load_state_dict_pre_hooks": {},
                    "_modules": {
                      "0": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 42.0,
                            "out_features": 64,
                            "$type": "torch.nn.modules.linear.Linear"
                          },
                          "non_linearity": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                            "$type": "garage.torch._functions.NonLinearity"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      },
                      "1": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 64,
                            "out_features": 64,
                            "$type": "torch.nn.modules.linear.Linear"
                          },
                          "non_linearity": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                            "$type": "garage.torch._functions.NonLinearity"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      }
                    },
                    "$type": "torch.nn.modules.container.ModuleList"
                  },
                  "_output_layers": {
                    "training": true,
                    "_parameters": {},
                    "_buffers": {},
                    "_non_persistent_buffers_set": [],
                    "_backward_hooks": {},
                    "_forward_hooks": {},
                    "_forward_pre_hooks": {},
                    "_state_dict_hooks": {},
                    "_load_state_dict_pre_hooks": {},
                    "_modules": {
                      "0": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 64,
                            "out_features": 4.0,
                            "$type": "torch.nn.modules.linear.Linear"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      }
                    },
                    "$type": "torch.nn.modules.container.ModuleList"
                  }
                },
                "_output_dim": 4.0,
                "$type": "garage.torch.modules.mlp_module.MLPModule"
              }
            },
            "_input_dim": 42.0,
            "_hidden_sizes": [
              64,
              64
            ],
            "_action_dim": 4.0,
            "_learn_std": true,
            "_std_hidden_sizes": [
              32,
              32
            ],
            "_min_std": 1e-06,
            "_max_std": "None",
            "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
            "_std_hidden_w_init": {
              "$type": "builtins.function"
            },
            "_std_hidden_b_init": {
              "$type": "builtins.function"
            },
            "_std_output_nonlinearity": "None",
            "_std_output_w_init": {
              "$type": "builtins.function"
            },
            "_std_parameterization": "exp",
            "_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
            "_hidden_w_init": {
              "$type": "builtins.function"
            },
            "_hidden_b_init": {
              "$type": "builtins.function"
            },
            "_output_nonlinearity": "None",
            "_output_w_init": {
              "$type": "builtins.function"
            },
            "_output_b_init": {
              "$type": "builtins.function"
            },
            "_layer_normalization": false,
            "_norm_dist_class": {
              "$typename": "torch.distributions.normal.Normal"
            },
            "_min_std_param": {
              "$type": "torch.Tensor"
            },
            "_max_std_param": "None",
            "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
          }
        },
        "_env_spec": {
          "max_episode_length": 500,
          "input_space": {
            "dtype": "dtype('float32')",
            "bounded_below": "array([ True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True])",
            "_shape": [
              4
            ],
            "low": "array([-1., -1., -1., -1.], dtype=float32)",
            "high": "array([1., 1., 1., 1.], dtype=float32)",
            "low_repr": "-1.0",
            "high_repr": "1.0",
            "_np_random": "None",
            "$type": "akro.box.Box"
          },
          "output_space": {
            "dtype": "dtype('float32')",
            "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "_shape": [
              42
            ],
            "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
            "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
            "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
            "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
            "_np_random": "None",
            "$type": "akro.box.Box"
          },
          "$type": "garage._environment.EnvSpec"
        },
        "_name": "GaussianMLPPolicy",
        "_obs_dim": 42.0,
        "_action_dim": 4.0,
        "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
      },
      "_envs": [
        {
          "_sample_strategy": {
            "$type": "builtins.function"
          },
          "_num_tasks": 3,
          "_active_task_index": "None",
          "_mode": "vanilla",
          "_env": {
            "_env": {
              "_env": {
                "_env": {
                  "_env": {
                    "frame_skip": 5,
                    "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                    "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                    "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                    "viewer": "None",
                    "_viewers": {},
                    "metadata": {
                      "render.modes": [
                        "human"
                      ],
                      "video.frames_per_second": 80
                    },
                    "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                    "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                    "_did_see_sim_exception": false,
                    "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                    "action_scale": 0.01,
                    "action_rot_scale": 1.0,
                    "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "hand_high": "array([0.5, 1. , 0.5])",
                    "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "mocap_high": "array([0.5, 1. , 0.5])",
                    "curr_path_length": 0,
                    "seeded_rand_vec": true,
                    "_freeze_rand_vec": true,
                    "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                    "discrete_goal_space": "None",
                    "discrete_goals": [],
                    "active_discrete_goal": "None",
                    "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                    "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                    "action_space": {
                      "dtype": "dtype('float64')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.])",
                      "high": "array([1., 1., 1., 1.])",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "isV2": true,
                    "_obs_obj_max_len": 14,
                    "_obs_obj_possible_lens": [
                      6,
                      14
                    ],
                    "_set_task_called": true,
                    "_partially_observable": false,
                    "hand_init_pos": "array([0. , 0.6, 0.2])",
                    "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                    "_random_reset_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                      "_shape": [
                        6
                      ],
                      "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                      "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                      "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "_last_stable_obs": "None",
                    "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                    "init_config": {
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                      "hand_init_pos": "array([0. , 0.6, 0.2])"
                    },
                    "goal": "array([-0.1,  0.8,  0.2])",
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                    "goal_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True])",
                      "_shape": [
                        3
                      ],
                      "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                      "low_repr": "[-0.1   0.8   0.05]",
                      "high_repr": "[0.1 0.9 0.3]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "num_resets": 1,
                    "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                    "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
                  },
                  "_max_episode_length": 500,
                  "_render_modes": [
                    "human"
                  ],
                  "_step_cnt": "None",
                  "_visualize": false,
                  "_action_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_observation_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_spec": {
                    "max_episode_length": 500,
                    "input_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "output_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "$type": "garage._environment.EnvSpec"
                  },
                  "_env_info": "None",
                  "$type": "garage.envs.gym_env.GymEnv"
                },
                "_task_name": "reach-v2",
                "_task_id": "None",
                "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
              },
              "_task_index": 0,
              "_n_total_tasks": 3,
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          },
          "_env_names": "None",
          "_task_envs": [
            {
              "_env": {
                "_env": {
                  "_env": {
                    "_env": {
                      "frame_skip": 5,
                      "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                      "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                      "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                      "viewer": "None",
                      "_viewers": {},
                      "metadata": {
                        "render.modes": [
                          "human"
                        ],
                        "video.frames_per_second": 80
                      },
                      "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                      "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                      "_did_see_sim_exception": false,
                      "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                      "action_scale": 0.01,
                      "action_rot_scale": 1.0,
                      "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "hand_high": "array([0.5, 1. , 0.5])",
                      "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "mocap_high": "array([0.5, 1. , 0.5])",
                      "curr_path_length": 0,
                      "seeded_rand_vec": true,
                      "_freeze_rand_vec": true,
                      "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                      "discrete_goal_space": "None",
                      "discrete_goals": [],
                      "active_discrete_goal": "None",
                      "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                      "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                      "action_space": {
                        "dtype": "dtype('float64')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.])",
                        "high": "array([1., 1., 1., 1.])",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "isV2": true,
                      "_obs_obj_max_len": 14,
                      "_obs_obj_possible_lens": [
                        6,
                        14
                      ],
                      "_set_task_called": true,
                      "_partially_observable": false,
                      "hand_init_pos": "array([0. , 0.6, 0.2])",
                      "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                      "_random_reset_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                        "_shape": [
                          6
                        ],
                        "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                        "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                        "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                        "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "_last_stable_obs": "None",
                      "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                      "init_config": {
                        "obj_init_angle": 0.3,
                        "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                        "hand_init_pos": "array([0. , 0.6, 0.2])"
                      },
                      "goal": "array([-0.1,  0.8,  0.2])",
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                      "goal_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True])",
                        "_shape": [
                          3
                        ],
                        "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                        "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                        "low_repr": "[-0.1   0.8   0.05]",
                        "high_repr": "[0.1 0.9 0.3]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "num_resets": 1,
                      "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                      "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
                    },
                    "_max_episode_length": 500,
                    "_render_modes": [
                      "human"
                    ],
                    "_step_cnt": "None",
                    "_visualize": false,
                    "_action_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_observation_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_spec": {
                      "max_episode_length": 500,
                      "input_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.], dtype=float32)",
                        "high": "array([1., 1., 1., 1.], dtype=float32)",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "output_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "_shape": [
                          39
                        ],
                        "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                        "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                        "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                        "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "$type": "garage._environment.EnvSpec"
                    },
                    "_env_info": "None",
                    "$type": "garage.envs.gym_env.GymEnv"
                  },
                  "_task_name": "reach-v2",
                  "_task_id": "None",
                  "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
                },
                "_task_index": 0,
                "_n_total_tasks": 3,
                "_observation_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_spec": {
                  "max_episode_length": 500,
                  "input_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "output_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "_shape": [
                      42
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "$type": "garage._environment.EnvSpec"
                },
                "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
              },
              "_scale_reward": 1.0,
              "_normalize_obs": false,
              "_normalize_reward": false,
              "_expected_action_scale": 1.0,
              "_flatten_obs": true,
              "_obs_alpha": 0.001,
              "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
              "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
              "_reward_alpha": 0.001,
              "_reward_mean": 0.0,
              "_reward_var": 1.0,
              "$type": "garage.envs.normalized_env.NormalizedEnv"
            },
            {
              "_env": {
                "_env": {
                  "_env": {
                    "_env": {
                      "frame_skip": 5,
                      "model": "<mujoco_py.cymj.PyMjModel object at 0x5590749314a0>",
                      "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4b493c40>",
                      "data": "<mujoco_py.cymj.PyMjData object at 0x559074249af0>",
                      "viewer": "None",
                      "_viewers": {},
                      "metadata": {
                        "render.modes": [
                          "human"
                        ],
                        "video.frames_per_second": 80
                      },
                      "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                      "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                      "_did_see_sim_exception": false,
                      "_np_random": "Generator(PCG64) at 0x7F2E4BEFD9E0",
                      "action_scale": 0.01,
                      "action_rot_scale": 1.0,
                      "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "hand_high": "array([0.5, 1. , 0.5])",
                      "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "mocap_high": "array([0.5, 1. , 0.5])",
                      "curr_path_length": 0,
                      "seeded_rand_vec": true,
                      "_freeze_rand_vec": true,
                      "_last_rand_vec": "array([ 0.08191008,  0.69501554,  0.02      , -0.04610754,  0.8734471 ,\n        0.01182118])",
                      "discrete_goal_space": "None",
                      "discrete_goals": [],
                      "active_discrete_goal": "None",
                      "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                      "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                      "action_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.], dtype=float32)",
                        "high": "array([1., 1., 1., 1.], dtype=float32)",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "isV2": true,
                      "_obs_obj_max_len": 14,
                      "_obs_obj_possible_lens": [
                        6,
                        14
                      ],
                      "_set_task_called": true,
                      "_partially_observable": false,
                      "hand_init_pos": "array([0. , 0.6, 0.2])",
                      "_target_pos": "array([-0.04610754,  0.8734471 ,  0.01987216])",
                      "_random_reset_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                        "_shape": [
                          6
                        ],
                        "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.01], dtype=float32)",
                        "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.02], dtype=float32)",
                        "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.01]",
                        "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.02]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "_last_stable_obs": "None",
                      "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.08191008,\n       0.69501554, 0.01987216, 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                      "init_config": {
                        "obj_init_angle": 0.3,
                        "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                        "hand_init_pos": "array([0. , 0.6, 0.2])"
                      },
                      "goal": "array([0.1 , 0.8 , 0.02])",
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.08191008, 0.69501554, 0.01987216])",
                      "goal_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True])",
                        "_shape": [
                          3
                        ],
                        "low": "array([-0.1 ,  0.8 ,  0.01], dtype=float32)",
                        "high": "array([0.1 , 0.9 , 0.02], dtype=float32)",
                        "low_repr": "[-0.1   0.8   0.01]",
                        "high_repr": "[0.1  0.9  0.02]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "num_resets": 1,
                      "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                      "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_push_v2.SawyerPushEnvV2"
                    },
                    "_max_episode_length": 500,
                    "_render_modes": [
                      "human"
                    ],
                    "_step_cnt": "None",
                    "_visualize": false,
                    "_action_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_observation_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_spec": {
                      "max_episode_length": 500,
                      "input_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.], dtype=float32)",
                        "high": "array([1., 1., 1., 1.], dtype=float32)",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "output_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "_shape": [
                          39
                        ],
                        "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                        "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                        "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                        "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "$type": "garage._environment.EnvSpec"
                    },
                    "_env_info": "None",
                    "$type": "garage.envs.gym_env.GymEnv"
                  },
                  "_task_name": "push-v2",
                  "_task_id": "None",
                  "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
                },
                "_task_index": 1,
                "_n_total_tasks": 3,
                "_observation_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_spec": {
                  "max_episode_length": 500,
                  "input_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "output_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "_shape": [
                      42
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "$type": "garage._environment.EnvSpec"
                },
                "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
              },
              "_scale_reward": 1.0,
              "_normalize_obs": false,
              "_normalize_reward": false,
              "_expected_action_scale": 1.0,
              "_flatten_obs": true,
              "_obs_alpha": 0.001,
              "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
              "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
              "_reward_alpha": 0.001,
              "_reward_mean": 0.0,
              "_reward_var": 1.0,
              "$type": "garage.envs.normalized_env.NormalizedEnv"
            },
            {
              "_env": {
                "_env": {
                  "_env": {
                    "_env": {
                      "frame_skip": 5,
                      "model": "<mujoco_py.cymj.PyMjModel object at 0x559074237a80>",
                      "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4bc8b440>",
                      "data": "<mujoco_py.cymj.PyMjData object at 0x5590744212f0>",
                      "viewer": "None",
                      "_viewers": {},
                      "metadata": {
                        "render.modes": [
                          "human"
                        ],
                        "video.frames_per_second": 80
                      },
                      "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                      "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                      "_did_see_sim_exception": false,
                      "_np_random": "Generator(PCG64) at 0x7F2E4BEFDC80",
                      "action_scale": 0.01,
                      "action_rot_scale": 1.0,
                      "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "hand_high": "array([0.5, 1. , 0.5])",
                      "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "mocap_high": "array([0.5, 1. , 0.5])",
                      "curr_path_length": 0,
                      "seeded_rand_vec": true,
                      "_freeze_rand_vec": true,
                      "_last_rand_vec": "array([-0.05827653,  0.66470647,  0.02      , -0.09629089,  0.89126761,\n        0.11664289])",
                      "discrete_goal_space": "None",
                      "discrete_goals": [],
                      "active_discrete_goal": "None",
                      "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                      "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                      "action_space": {
                        "dtype": "dtype('float64')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.])",
                        "high": "array([1., 1., 1., 1.])",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "isV2": true,
                      "_obs_obj_max_len": 14,
                      "_obs_obj_possible_lens": [
                        6,
                        14
                      ],
                      "_set_task_called": true,
                      "_partially_observable": false,
                      "hand_init_pos": "array([0. , 0.6, 0.2])",
                      "_target_pos": "array([-0.09629089,  0.89126761,  0.11664289])",
                      "_random_reset_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                        "_shape": [
                          6
                        ],
                        "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                        "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                        "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                        "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "_last_stable_obs": "None",
                      "_prev_obs": "array([ 0.00615235,  0.6001898 ,  0.19430117,  1.        , -0.05827653,\n        0.66470647,  0.02      ,  0.        ,  0.        ,  0.        ,\n        1.        ,  0.        ,  0.        ,  0.        ,  0.        ,\n        0.        ,  0.        ,  0.        ])",
                      "init_config": {
                        "obj_init_angle": 0.3,
                        "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                        "hand_init_pos": "array([0. , 0.6, 0.2])"
                      },
                      "goal": "array([0.1, 0.8, 0.2])",
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([-0.05827653,  0.66470647,  0.02      ])",
                      "goal_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True])",
                        "_shape": [
                          3
                        ],
                        "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                        "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                        "low_repr": "[-0.1   0.8   0.05]",
                        "high_repr": "[0.1 0.9 0.3]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "num_resets": 1,
                      "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                      "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_pick_place_v2.SawyerPickPlaceEnvV2"
                    },
                    "_max_episode_length": 500,
                    "_render_modes": [
                      "human"
                    ],
                    "_step_cnt": "None",
                    "_visualize": false,
                    "_action_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_observation_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_spec": {
                      "max_episode_length": 500,
                      "input_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.], dtype=float32)",
                        "high": "array([1., 1., 1., 1.], dtype=float32)",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "output_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "_shape": [
                          39
                        ],
                        "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                        "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                        "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                        "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "$type": "garage._environment.EnvSpec"
                    },
                    "_env_info": "None",
                    "$type": "garage.envs.gym_env.GymEnv"
                  },
                  "_task_name": "pick-place-v2",
                  "_task_id": "None",
                  "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
                },
                "_task_index": 2,
                "_n_total_tasks": 3,
                "_observation_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_spec": {
                  "max_episode_length": 500,
                  "input_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "output_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "_shape": [
                      42
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "$type": "garage._environment.EnvSpec"
                },
                "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
              },
              "_scale_reward": 1.0,
              "_normalize_obs": false,
              "_normalize_reward": false,
              "_expected_action_scale": 1.0,
              "_flatten_obs": true,
              "_obs_alpha": 0.001,
              "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
              "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
              "_reward_alpha": 0.001,
              "_reward_mean": 0.0,
              "_reward_var": 1.0,
              "$type": "garage.envs.normalized_env.NormalizedEnv"
            }
          ],
          "$type": "garage.envs.multi_env_wrapper.MultiEnvWrapper"
        },
        {
          "_sample_strategy": {
            "$type": "builtins.function"
          },
          "_num_tasks": 3,
          "_active_task_index": "None",
          "_mode": "vanilla",
          "_env": {
            "_env": {
              "_env": {
                "_env": {
                  "_env": {
                    "frame_skip": 5,
                    "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                    "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                    "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                    "viewer": "None",
                    "_viewers": {},
                    "metadata": {
                      "render.modes": [
                        "human"
                      ],
                      "video.frames_per_second": 80
                    },
                    "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                    "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                    "_did_see_sim_exception": false,
                    "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                    "action_scale": 0.01,
                    "action_rot_scale": 1.0,
                    "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "hand_high": "array([0.5, 1. , 0.5])",
                    "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "mocap_high": "array([0.5, 1. , 0.5])",
                    "curr_path_length": 0,
                    "seeded_rand_vec": true,
                    "_freeze_rand_vec": true,
                    "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                    "discrete_goal_space": "None",
                    "discrete_goals": [],
                    "active_discrete_goal": "None",
                    "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                    "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                    "action_space": {
                      "dtype": "dtype('float64')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.])",
                      "high": "array([1., 1., 1., 1.])",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "isV2": true,
                    "_obs_obj_max_len": 14,
                    "_obs_obj_possible_lens": [
                      6,
                      14
                    ],
                    "_set_task_called": true,
                    "_partially_observable": false,
                    "hand_init_pos": "array([0. , 0.6, 0.2])",
                    "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                    "_random_reset_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                      "_shape": [
                        6
                      ],
                      "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                      "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                      "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "_last_stable_obs": "None",
                    "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                    "init_config": {
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                      "hand_init_pos": "array([0. , 0.6, 0.2])"
                    },
                    "goal": "array([-0.1,  0.8,  0.2])",
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                    "goal_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True])",
                      "_shape": [
                        3
                      ],
                      "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                      "low_repr": "[-0.1   0.8   0.05]",
                      "high_repr": "[0.1 0.9 0.3]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "num_resets": 1,
                    "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                    "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
                  },
                  "_max_episode_length": 500,
                  "_render_modes": [
                    "human"
                  ],
                  "_step_cnt": "None",
                  "_visualize": false,
                  "_action_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_observation_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_spec": {
                    "max_episode_length": 500,
                    "input_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "output_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "$type": "garage._environment.EnvSpec"
                  },
                  "_env_info": "None",
                  "$type": "garage.envs.gym_env.GymEnv"
                },
                "_task_name": "reach-v2",
                "_task_id": "None",
                "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
              },
              "_task_index": 0,
              "_n_total_tasks": 3,
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          },
          "_env_names": "None",
          "_task_envs": [
            {
              "_env": {
                "_env": {
                  "_env": {
                    "_env": {
                      "frame_skip": 5,
                      "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                      "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                      "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                      "viewer": "None",
                      "_viewers": {},
                      "metadata": {
                        "render.modes": [
                          "human"
                        ],
                        "video.frames_per_second": 80
                      },
                      "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                      "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                      "_did_see_sim_exception": false,
                      "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                      "action_scale": 0.01,
                      "action_rot_scale": 1.0,
                      "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "hand_high": "array([0.5, 1. , 0.5])",
                      "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "mocap_high": "array([0.5, 1. , 0.5])",
                      "curr_path_length": 0,
                      "seeded_rand_vec": true,
                      "_freeze_rand_vec": true,
                      "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                      "discrete_goal_space": "None",
                      "discrete_goals": [],
                      "active_discrete_goal": "None",
                      "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                      "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                      "action_space": {
                        "dtype": "dtype('float64')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.])",
                        "high": "array([1., 1., 1., 1.])",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "isV2": true,
                      "_obs_obj_max_len": 14,
                      "_obs_obj_possible_lens": [
                        6,
                        14
                      ],
                      "_set_task_called": true,
                      "_partially_observable": false,
                      "hand_init_pos": "array([0. , 0.6, 0.2])",
                      "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                      "_random_reset_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                        "_shape": [
                          6
                        ],
                        "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                        "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                        "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                        "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "_last_stable_obs": "None",
                      "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                      "init_config": {
                        "obj_init_angle": 0.3,
                        "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                        "hand_init_pos": "array([0. , 0.6, 0.2])"
                      },
                      "goal": "array([-0.1,  0.8,  0.2])",
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                      "goal_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True])",
                        "_shape": [
                          3
                        ],
                        "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                        "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                        "low_repr": "[-0.1   0.8   0.05]",
                        "high_repr": "[0.1 0.9 0.3]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "num_resets": 1,
                      "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                      "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
                    },
                    "_max_episode_length": 500,
                    "_render_modes": [
                      "human"
                    ],
                    "_step_cnt": "None",
                    "_visualize": false,
                    "_action_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_observation_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_spec": {
                      "max_episode_length": 500,
                      "input_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.], dtype=float32)",
                        "high": "array([1., 1., 1., 1.], dtype=float32)",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "output_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "_shape": [
                          39
                        ],
                        "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                        "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                        "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                        "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "$type": "garage._environment.EnvSpec"
                    },
                    "_env_info": "None",
                    "$type": "garage.envs.gym_env.GymEnv"
                  },
                  "_task_name": "reach-v2",
                  "_task_id": "None",
                  "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
                },
                "_task_index": 0,
                "_n_total_tasks": 3,
                "_observation_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_spec": {
                  "max_episode_length": 500,
                  "input_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "output_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "_shape": [
                      42
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "$type": "garage._environment.EnvSpec"
                },
                "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
              },
              "_scale_reward": 1.0,
              "_normalize_obs": false,
              "_normalize_reward": false,
              "_expected_action_scale": 1.0,
              "_flatten_obs": true,
              "_obs_alpha": 0.001,
              "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
              "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
              "_reward_alpha": 0.001,
              "_reward_mean": 0.0,
              "_reward_var": 1.0,
              "$type": "garage.envs.normalized_env.NormalizedEnv"
            },
            {
              "_env": {
                "_env": {
                  "_env": {
                    "_env": {
                      "frame_skip": 5,
                      "model": "<mujoco_py.cymj.PyMjModel object at 0x5590749314a0>",
                      "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4b493c40>",
                      "data": "<mujoco_py.cymj.PyMjData object at 0x559074249af0>",
                      "viewer": "None",
                      "_viewers": {},
                      "metadata": {
                        "render.modes": [
                          "human"
                        ],
                        "video.frames_per_second": 80
                      },
                      "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                      "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                      "_did_see_sim_exception": false,
                      "_np_random": "Generator(PCG64) at 0x7F2E4BEFD9E0",
                      "action_scale": 0.01,
                      "action_rot_scale": 1.0,
                      "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "hand_high": "array([0.5, 1. , 0.5])",
                      "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "mocap_high": "array([0.5, 1. , 0.5])",
                      "curr_path_length": 0,
                      "seeded_rand_vec": true,
                      "_freeze_rand_vec": true,
                      "_last_rand_vec": "array([ 0.08191008,  0.69501554,  0.02      , -0.04610754,  0.8734471 ,\n        0.01182118])",
                      "discrete_goal_space": "None",
                      "discrete_goals": [],
                      "active_discrete_goal": "None",
                      "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                      "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                      "action_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.], dtype=float32)",
                        "high": "array([1., 1., 1., 1.], dtype=float32)",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "isV2": true,
                      "_obs_obj_max_len": 14,
                      "_obs_obj_possible_lens": [
                        6,
                        14
                      ],
                      "_set_task_called": true,
                      "_partially_observable": false,
                      "hand_init_pos": "array([0. , 0.6, 0.2])",
                      "_target_pos": "array([-0.04610754,  0.8734471 ,  0.01987216])",
                      "_random_reset_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                        "_shape": [
                          6
                        ],
                        "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.01], dtype=float32)",
                        "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.02], dtype=float32)",
                        "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.01]",
                        "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.02]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "_last_stable_obs": "None",
                      "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.08191008,\n       0.69501554, 0.01987216, 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                      "init_config": {
                        "obj_init_angle": 0.3,
                        "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                        "hand_init_pos": "array([0. , 0.6, 0.2])"
                      },
                      "goal": "array([0.1 , 0.8 , 0.02])",
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.08191008, 0.69501554, 0.01987216])",
                      "goal_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True])",
                        "_shape": [
                          3
                        ],
                        "low": "array([-0.1 ,  0.8 ,  0.01], dtype=float32)",
                        "high": "array([0.1 , 0.9 , 0.02], dtype=float32)",
                        "low_repr": "[-0.1   0.8   0.01]",
                        "high_repr": "[0.1  0.9  0.02]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "num_resets": 1,
                      "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                      "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_push_v2.SawyerPushEnvV2"
                    },
                    "_max_episode_length": 500,
                    "_render_modes": [
                      "human"
                    ],
                    "_step_cnt": "None",
                    "_visualize": false,
                    "_action_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_observation_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_spec": {
                      "max_episode_length": 500,
                      "input_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.], dtype=float32)",
                        "high": "array([1., 1., 1., 1.], dtype=float32)",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "output_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "_shape": [
                          39
                        ],
                        "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                        "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                        "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                        "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "$type": "garage._environment.EnvSpec"
                    },
                    "_env_info": "None",
                    "$type": "garage.envs.gym_env.GymEnv"
                  },
                  "_task_name": "push-v2",
                  "_task_id": "None",
                  "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
                },
                "_task_index": 1,
                "_n_total_tasks": 3,
                "_observation_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_spec": {
                  "max_episode_length": 500,
                  "input_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "output_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "_shape": [
                      42
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "$type": "garage._environment.EnvSpec"
                },
                "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
              },
              "_scale_reward": 1.0,
              "_normalize_obs": false,
              "_normalize_reward": false,
              "_expected_action_scale": 1.0,
              "_flatten_obs": true,
              "_obs_alpha": 0.001,
              "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
              "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
              "_reward_alpha": 0.001,
              "_reward_mean": 0.0,
              "_reward_var": 1.0,
              "$type": "garage.envs.normalized_env.NormalizedEnv"
            },
            {
              "_env": {
                "_env": {
                  "_env": {
                    "_env": {
                      "frame_skip": 5,
                      "model": "<mujoco_py.cymj.PyMjModel object at 0x559074237a80>",
                      "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4bc8b440>",
                      "data": "<mujoco_py.cymj.PyMjData object at 0x5590744212f0>",
                      "viewer": "None",
                      "_viewers": {},
                      "metadata": {
                        "render.modes": [
                          "human"
                        ],
                        "video.frames_per_second": 80
                      },
                      "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                      "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                      "_did_see_sim_exception": false,
                      "_np_random": "Generator(PCG64) at 0x7F2E4BEFDC80",
                      "action_scale": 0.01,
                      "action_rot_scale": 1.0,
                      "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "hand_high": "array([0.5, 1. , 0.5])",
                      "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                      "mocap_high": "array([0.5, 1. , 0.5])",
                      "curr_path_length": 0,
                      "seeded_rand_vec": true,
                      "_freeze_rand_vec": true,
                      "_last_rand_vec": "array([-0.05827653,  0.66470647,  0.02      , -0.09629089,  0.89126761,\n        0.11664289])",
                      "discrete_goal_space": "None",
                      "discrete_goals": [],
                      "active_discrete_goal": "None",
                      "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                      "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                      "action_space": {
                        "dtype": "dtype('float64')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.])",
                        "high": "array([1., 1., 1., 1.])",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "isV2": true,
                      "_obs_obj_max_len": 14,
                      "_obs_obj_possible_lens": [
                        6,
                        14
                      ],
                      "_set_task_called": true,
                      "_partially_observable": false,
                      "hand_init_pos": "array([0. , 0.6, 0.2])",
                      "_target_pos": "array([-0.09629089,  0.89126761,  0.11664289])",
                      "_random_reset_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                        "_shape": [
                          6
                        ],
                        "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                        "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                        "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                        "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "_last_stable_obs": "None",
                      "_prev_obs": "array([ 0.00615235,  0.6001898 ,  0.19430117,  1.        , -0.05827653,\n        0.66470647,  0.02      ,  0.        ,  0.        ,  0.        ,\n        1.        ,  0.        ,  0.        ,  0.        ,  0.        ,\n        0.        ,  0.        ,  0.        ])",
                      "init_config": {
                        "obj_init_angle": 0.3,
                        "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                        "hand_init_pos": "array([0. , 0.6, 0.2])"
                      },
                      "goal": "array([0.1, 0.8, 0.2])",
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([-0.05827653,  0.66470647,  0.02      ])",
                      "goal_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True])",
                        "_shape": [
                          3
                        ],
                        "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                        "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                        "low_repr": "[-0.1   0.8   0.05]",
                        "high_repr": "[0.1 0.9 0.3]",
                        "_np_random": "None",
                        "$type": "gym.spaces.box.Box"
                      },
                      "num_resets": 1,
                      "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                      "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_pick_place_v2.SawyerPickPlaceEnvV2"
                    },
                    "_max_episode_length": 500,
                    "_render_modes": [
                      "human"
                    ],
                    "_step_cnt": "None",
                    "_visualize": false,
                    "_action_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_observation_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "_spec": {
                      "max_episode_length": 500,
                      "input_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True])",
                        "_shape": [
                          4
                        ],
                        "low": "array([-1., -1., -1., -1.], dtype=float32)",
                        "high": "array([1., 1., 1., 1.], dtype=float32)",
                        "low_repr": "-1.0",
                        "high_repr": "1.0",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "output_space": {
                        "dtype": "dtype('float32')",
                        "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                        "_shape": [
                          39
                        ],
                        "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                        "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                        "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                        "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                        "_np_random": "None",
                        "$type": "akro.box.Box"
                      },
                      "$type": "garage._environment.EnvSpec"
                    },
                    "_env_info": "None",
                    "$type": "garage.envs.gym_env.GymEnv"
                  },
                  "_task_name": "pick-place-v2",
                  "_task_id": "None",
                  "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
                },
                "_task_index": 2,
                "_n_total_tasks": 3,
                "_observation_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_spec": {
                  "max_episode_length": 500,
                  "input_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "output_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                    "_shape": [
                      42
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "$type": "garage._environment.EnvSpec"
                },
                "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
              },
              "_scale_reward": 1.0,
              "_normalize_obs": false,
              "_normalize_reward": false,
              "_expected_action_scale": 1.0,
              "_flatten_obs": true,
              "_obs_alpha": 0.001,
              "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
              "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
              "_reward_alpha": 0.001,
              "_reward_mean": 0.0,
              "_reward_var": 1.0,
              "$type": "garage.envs.normalized_env.NormalizedEnv"
            }
          ],
          "$type": "garage.envs.multi_env_wrapper.MultiEnvWrapper"
        }
      ],
      "_all_workers": {
        "0": "Actor(SamplerWorker, eb4fa3183dae33c7e9c5df3f01000000)",
        "1": "Actor(SamplerWorker, 95bcb57d6d78a0f90d6c683301000000)"
      },
      "_workers_started": true,
      "total_env_steps": 0,
      "$type": "garage.sampler.ray_sampler.RaySampler"
    },
    "_policy_optimizer": {
      "_optimizer": {
        "defaults": {},
        "_max_constraint_value": 0.01,
        "_cg_iters": 10,
        "_max_backtracks": 15,
        "_backtrack_ratio": 0.8,
        "_hvp_reg_coeff": 1e-05,
        "_accept_violation": false,
        "param_groups": [
          {
            "params": [
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              }
            ]
          }
        ],
        "$type": "garage.torch.optimizers.conjugate_gradient_optimizer.ConjugateGradientOptimizer"
      },
      "_max_optimization_epochs": 1,
      "_minibatch_size": "None",
      "$type": "garage.torch.optimizers.optimizer_wrapper.OptimizerWrapper"
    },
    "_vf_optimizer": {
      "_optimizer": {
        "defaults": {
          "lr": 0.00025,
          "betas": [
            0.9,
            0.999
          ],
          "eps": 1e-08,
          "weight_decay": 0,
          "amsgrad": false
        },
        "state": {},
        "param_groups": [
          {
            "params": [
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              }
            ],
            "lr": 0.00025,
            "betas": [
              0.9,
              0.999
            ],
            "eps": 1e-08,
            "weight_decay": 0,
            "amsgrad": false
          }
        ],
        "$type": "torch.optim.adam.Adam"
      },
      "_max_optimization_epochs": 10,
      "_minibatch_size": 64,
      "$type": "garage.torch.optimizers.optimizer_wrapper.OptimizerWrapper"
    },
    "_old_policy": {
      "training": true,
      "_parameters": {},
      "_buffers": {},
      "_non_persistent_buffers_set": [],
      "_backward_hooks": {},
      "_forward_hooks": {},
      "_forward_pre_hooks": {},
      "_state_dict_hooks": {},
      "_load_state_dict_pre_hooks": {},
      "_modules": {
        "_module": {
          "training": true,
          "_parameters": {
            "_init_std": {
              "$type": "torch.nn.parameter.Parameter"
            }
          },
          "_buffers": {
            "min_std_param": {
              "$type": "torch.Tensor"
            }
          },
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_mean_module": {
              "training": true,
              "_parameters": {},
              "_buffers": {},
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 42.0,
                          "out_features": 64,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    },
                    "1": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 64,
                          "out_features": 64,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                },
                "_output_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 64,
                          "out_features": 4.0,
                          "$type": "torch.nn.modules.linear.Linear"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                }
              },
              "_output_dim": 4.0,
              "$type": "garage.torch.modules.mlp_module.MLPModule"
            }
          },
          "_input_dim": 42.0,
          "_hidden_sizes": [
            64,
            64
          ],
          "_action_dim": 4.0,
          "_learn_std": true,
          "_std_hidden_sizes": [
            32,
            32
          ],
          "_min_std": 1e-06,
          "_max_std": "None",
          "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
          "_std_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_std_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_std_output_nonlinearity": "None",
          "_std_output_w_init": {
            "$type": "builtins.function"
          },
          "_std_parameterization": "exp",
          "_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
          "_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_output_nonlinearity": "None",
          "_output_w_init": {
            "$type": "builtins.function"
          },
          "_output_b_init": {
            "$type": "builtins.function"
          },
          "_layer_normalization": false,
          "_norm_dist_class": {
            "$typename": "torch.distributions.normal.Normal"
          },
          "_min_std_param": {
            "$type": "torch.Tensor"
          },
          "_max_std_param": "None",
          "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
        }
      },
      "_env_spec": {
        "max_episode_length": 500,
        "input_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "_shape": [
            4
          ],
          "low": "array([-1., -1., -1., -1.], dtype=float32)",
          "high": "array([1., 1., 1., 1.], dtype=float32)",
          "low_repr": "-1.0",
          "high_repr": "1.0",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "output_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "_shape": [
            42
          ],
          "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
          "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
          "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
          "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "$type": "garage._environment.EnvSpec"
      },
      "_name": "GaussianMLPPolicy",
      "_obs_dim": 42.0,
      "_action_dim": 4.0,
      "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
    },
    "$type": "garage.torch.algos.trpo.TRPO"
  },
  "_env": {
    "_sample_strategy": {
      "$type": "builtins.function"
    },
    "_num_tasks": 3,
    "_active_task_index": "None",
    "_mode": "vanilla",
    "_env": {
      "_env": {
        "_env": {
          "_env": {
            "_env": {
              "frame_skip": 5,
              "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
              "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
              "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
              "viewer": "None",
              "_viewers": {},
              "metadata": {
                "render.modes": [
                  "human"
                ],
                "video.frames_per_second": 80
              },
              "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
              "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
              "_did_see_sim_exception": false,
              "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
              "action_scale": 0.01,
              "action_rot_scale": 1.0,
              "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
              "hand_high": "array([0.5, 1. , 0.5])",
              "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
              "mocap_high": "array([0.5, 1. , 0.5])",
              "curr_path_length": 0,
              "seeded_rand_vec": true,
              "_freeze_rand_vec": true,
              "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
              "discrete_goal_space": "None",
              "discrete_goals": [],
              "active_discrete_goal": "None",
              "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
              "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
              "action_space": {
                "dtype": "dtype('float64')",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "_shape": [
                  4
                ],
                "low": "array([-1., -1., -1., -1.])",
                "high": "array([1., 1., 1., 1.])",
                "low_repr": "-1.0",
                "high_repr": "1.0",
                "_np_random": "None",
                "$type": "gym.spaces.box.Box"
              },
              "isV2": true,
              "_obs_obj_max_len": 14,
              "_obs_obj_possible_lens": [
                6,
                14
              ],
              "_set_task_called": true,
              "_partially_observable": false,
              "hand_init_pos": "array([0. , 0.6, 0.2])",
              "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
              "_random_reset_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                "_shape": [
                  6
                ],
                "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                "_np_random": "None",
                "$type": "gym.spaces.box.Box"
              },
              "_last_stable_obs": "None",
              "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
              "init_config": {
                "obj_init_angle": 0.3,
                "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                "hand_init_pos": "array([0. , 0.6, 0.2])"
              },
              "goal": "array([-0.1,  0.8,  0.2])",
              "obj_init_angle": 0.3,
              "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
              "goal_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True])",
                "bounded_above": "array([ True,  True,  True])",
                "_shape": [
                  3
                ],
                "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                "low_repr": "[-0.1   0.8   0.05]",
                "high_repr": "[0.1 0.9 0.3]",
                "_np_random": "None",
                "$type": "gym.spaces.box.Box"
              },
              "num_resets": 1,
              "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
              "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
            },
            "_max_episode_length": 500,
            "_render_modes": [
              "human"
            ],
            "_step_cnt": "None",
            "_visualize": false,
            "_action_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "_shape": [
                4
              ],
              "low": "array([-1., -1., -1., -1.], dtype=float32)",
              "high": "array([1., 1., 1., 1.], dtype=float32)",
              "low_repr": "-1.0",
              "high_repr": "1.0",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "_observation_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
              "_shape": [
                39
              ],
              "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
              "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
              "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
              "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "_spec": {
              "max_episode_length": 500,
              "input_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "_shape": [
                  4
                ],
                "low": "array([-1., -1., -1., -1.], dtype=float32)",
                "high": "array([1., 1., 1., 1.], dtype=float32)",
                "low_repr": "-1.0",
                "high_repr": "1.0",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                "_shape": [
                  39
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "_env_info": "None",
            "$type": "garage.envs.gym_env.GymEnv"
          },
          "_task_name": "reach-v2",
          "_task_id": "None",
          "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
        },
        "_task_index": 0,
        "_n_total_tasks": 3,
        "_observation_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "_shape": [
            42
          ],
          "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
          "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
          "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
          "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "_spec": {
          "max_episode_length": 500,
          "input_space": {
            "dtype": "dtype('float32')",
            "bounded_below": "array([ True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True])",
            "_shape": [
              4
            ],
            "low": "array([-1., -1., -1., -1.], dtype=float32)",
            "high": "array([1., 1., 1., 1.], dtype=float32)",
            "low_repr": "-1.0",
            "high_repr": "1.0",
            "_np_random": "None",
            "$type": "akro.box.Box"
          },
          "output_space": {
            "dtype": "dtype('float32')",
            "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "_shape": [
              42
            ],
            "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
            "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
            "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
            "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
            "_np_random": "None",
            "$type": "akro.box.Box"
          },
          "$type": "garage._environment.EnvSpec"
        },
        "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
      },
      "_scale_reward": 1.0,
      "_normalize_obs": false,
      "_normalize_reward": false,
      "_expected_action_scale": 1.0,
      "_flatten_obs": true,
      "_obs_alpha": 0.001,
      "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
      "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
      "_reward_alpha": 0.001,
      "_reward_mean": 0.0,
      "_reward_var": 1.0,
      "$type": "garage.envs.normalized_env.NormalizedEnv"
    },
    "_env_names": "None",
    "_task_envs": [
      {
        "_env": {
          "_env": {
            "_env": {
              "_env": {
                "frame_skip": 5,
                "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                "viewer": "None",
                "_viewers": {},
                "metadata": {
                  "render.modes": [
                    "human"
                  ],
                  "video.frames_per_second": 80
                },
                "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                "_did_see_sim_exception": false,
                "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                "action_scale": 0.01,
                "action_rot_scale": 1.0,
                "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                "hand_high": "array([0.5, 1. , 0.5])",
                "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                "mocap_high": "array([0.5, 1. , 0.5])",
                "curr_path_length": 0,
                "seeded_rand_vec": true,
                "_freeze_rand_vec": true,
                "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                "discrete_goal_space": "None",
                "discrete_goals": [],
                "active_discrete_goal": "None",
                "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                "action_space": {
                  "dtype": "dtype('float64')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.])",
                  "high": "array([1., 1., 1., 1.])",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "isV2": true,
                "_obs_obj_max_len": 14,
                "_obs_obj_possible_lens": [
                  6,
                  14
                ],
                "_set_task_called": true,
                "_partially_observable": false,
                "hand_init_pos": "array([0. , 0.6, 0.2])",
                "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                "_random_reset_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    6
                  ],
                  "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                  "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                  "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                  "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "_last_stable_obs": "None",
                "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                "init_config": {
                  "obj_init_angle": 0.3,
                  "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                  "hand_init_pos": "array([0. , 0.6, 0.2])"
                },
                "goal": "array([-0.1,  0.8,  0.2])",
                "obj_init_angle": 0.3,
                "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                "goal_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True])",
                  "_shape": [
                    3
                  ],
                  "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                  "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                  "low_repr": "[-0.1   0.8   0.05]",
                  "high_repr": "[0.1 0.9 0.3]",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "num_resets": 1,
                "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
              },
              "_max_episode_length": 500,
              "_render_modes": [
                "human"
              ],
              "_step_cnt": "None",
              "_visualize": false,
              "_action_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "_shape": [
                  4
                ],
                "low": "array([-1., -1., -1., -1.], dtype=float32)",
                "high": "array([1., 1., 1., 1.], dtype=float32)",
                "low_repr": "-1.0",
                "high_repr": "1.0",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                "_shape": [
                  39
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "_shape": [
                    39
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "_env_info": "None",
              "$type": "garage.envs.gym_env.GymEnv"
            },
            "_task_name": "reach-v2",
            "_task_id": "None",
            "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
          },
          "_task_index": 0,
          "_n_total_tasks": 3,
          "_observation_space": {
            "dtype": "dtype('float32')",
            "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "_shape": [
              42
            ],
            "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
            "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
            "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
            "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
            "_np_random": "None",
            "$type": "akro.box.Box"
          },
          "_spec": {
            "max_episode_length": 500,
            "input_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "_shape": [
                4
              ],
              "low": "array([-1., -1., -1., -1.], dtype=float32)",
              "high": "array([1., 1., 1., 1.], dtype=float32)",
              "low_repr": "-1.0",
              "high_repr": "1.0",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "_shape": [
                42
              ],
              "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
              "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
              "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
              "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
        },
        "_scale_reward": 1.0,
        "_normalize_obs": false,
        "_normalize_reward": false,
        "_expected_action_scale": 1.0,
        "_flatten_obs": true,
        "_obs_alpha": 0.001,
        "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
        "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
        "_reward_alpha": 0.001,
        "_reward_mean": 0.0,
        "_reward_var": 1.0,
        "$type": "garage.envs.normalized_env.NormalizedEnv"
      },
      {
        "_env": {
          "_env": {
            "_env": {
              "_env": {
                "frame_skip": 5,
                "model": "<mujoco_py.cymj.PyMjModel object at 0x5590749314a0>",
                "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4b493c40>",
                "data": "<mujoco_py.cymj.PyMjData object at 0x559074249af0>",
                "viewer": "None",
                "_viewers": {},
                "metadata": {
                  "render.modes": [
                    "human"
                  ],
                  "video.frames_per_second": 80
                },
                "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                "_did_see_sim_exception": false,
                "_np_random": "Generator(PCG64) at 0x7F2E4BEFD9E0",
                "action_scale": 0.01,
                "action_rot_scale": 1.0,
                "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                "hand_high": "array([0.5, 1. , 0.5])",
                "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                "mocap_high": "array([0.5, 1. , 0.5])",
                "curr_path_length": 0,
                "seeded_rand_vec": true,
                "_freeze_rand_vec": true,
                "_last_rand_vec": "array([ 0.08191008,  0.69501554,  0.02      , -0.04610754,  0.8734471 ,\n        0.01182118])",
                "discrete_goal_space": "None",
                "discrete_goals": [],
                "active_discrete_goal": "None",
                "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                "action_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "isV2": true,
                "_obs_obj_max_len": 14,
                "_obs_obj_possible_lens": [
                  6,
                  14
                ],
                "_set_task_called": true,
                "_partially_observable": false,
                "hand_init_pos": "array([0. , 0.6, 0.2])",
                "_target_pos": "array([-0.04610754,  0.8734471 ,  0.01987216])",
                "_random_reset_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    6
                  ],
                  "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.01], dtype=float32)",
                  "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.02], dtype=float32)",
                  "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.01]",
                  "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.02]",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "_last_stable_obs": "None",
                "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.08191008,\n       0.69501554, 0.01987216, 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                "init_config": {
                  "obj_init_angle": 0.3,
                  "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                  "hand_init_pos": "array([0. , 0.6, 0.2])"
                },
                "goal": "array([0.1 , 0.8 , 0.02])",
                "obj_init_angle": 0.3,
                "obj_init_pos": "array([0.08191008, 0.69501554, 0.01987216])",
                "goal_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True])",
                  "_shape": [
                    3
                  ],
                  "low": "array([-0.1 ,  0.8 ,  0.01], dtype=float32)",
                  "high": "array([0.1 , 0.9 , 0.02], dtype=float32)",
                  "low_repr": "[-0.1   0.8   0.01]",
                  "high_repr": "[0.1  0.9  0.02]",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "num_resets": 1,
                "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_push_v2.SawyerPushEnvV2"
              },
              "_max_episode_length": 500,
              "_render_modes": [
                "human"
              ],
              "_step_cnt": "None",
              "_visualize": false,
              "_action_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "_shape": [
                  4
                ],
                "low": "array([-1., -1., -1., -1.], dtype=float32)",
                "high": "array([1., 1., 1., 1.], dtype=float32)",
                "low_repr": "-1.0",
                "high_repr": "1.0",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                "_shape": [
                  39
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "_shape": [
                    39
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "_env_info": "None",
              "$type": "garage.envs.gym_env.GymEnv"
            },
            "_task_name": "push-v2",
            "_task_id": "None",
            "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
          },
          "_task_index": 1,
          "_n_total_tasks": 3,
          "_observation_space": {
            "dtype": "dtype('float32')",
            "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "_shape": [
              42
            ],
            "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
            "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
            "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
            "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
            "_np_random": "None",
            "$type": "akro.box.Box"
          },
          "_spec": {
            "max_episode_length": 500,
            "input_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "_shape": [
                4
              ],
              "low": "array([-1., -1., -1., -1.], dtype=float32)",
              "high": "array([1., 1., 1., 1.], dtype=float32)",
              "low_repr": "-1.0",
              "high_repr": "1.0",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "_shape": [
                42
              ],
              "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
              "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
              "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
              "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
        },
        "_scale_reward": 1.0,
        "_normalize_obs": false,
        "_normalize_reward": false,
        "_expected_action_scale": 1.0,
        "_flatten_obs": true,
        "_obs_alpha": 0.001,
        "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
        "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
        "_reward_alpha": 0.001,
        "_reward_mean": 0.0,
        "_reward_var": 1.0,
        "$type": "garage.envs.normalized_env.NormalizedEnv"
      },
      {
        "_env": {
          "_env": {
            "_env": {
              "_env": {
                "frame_skip": 5,
                "model": "<mujoco_py.cymj.PyMjModel object at 0x559074237a80>",
                "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4bc8b440>",
                "data": "<mujoco_py.cymj.PyMjData object at 0x5590744212f0>",
                "viewer": "None",
                "_viewers": {},
                "metadata": {
                  "render.modes": [
                    "human"
                  ],
                  "video.frames_per_second": 80
                },
                "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                "_did_see_sim_exception": false,
                "_np_random": "Generator(PCG64) at 0x7F2E4BEFDC80",
                "action_scale": 0.01,
                "action_rot_scale": 1.0,
                "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                "hand_high": "array([0.5, 1. , 0.5])",
                "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                "mocap_high": "array([0.5, 1. , 0.5])",
                "curr_path_length": 0,
                "seeded_rand_vec": true,
                "_freeze_rand_vec": true,
                "_last_rand_vec": "array([-0.05827653,  0.66470647,  0.02      , -0.09629089,  0.89126761,\n        0.11664289])",
                "discrete_goal_space": "None",
                "discrete_goals": [],
                "active_discrete_goal": "None",
                "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                "action_space": {
                  "dtype": "dtype('float64')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.])",
                  "high": "array([1., 1., 1., 1.])",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "isV2": true,
                "_obs_obj_max_len": 14,
                "_obs_obj_possible_lens": [
                  6,
                  14
                ],
                "_set_task_called": true,
                "_partially_observable": false,
                "hand_init_pos": "array([0. , 0.6, 0.2])",
                "_target_pos": "array([-0.09629089,  0.89126761,  0.11664289])",
                "_random_reset_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    6
                  ],
                  "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                  "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                  "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                  "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "_last_stable_obs": "None",
                "_prev_obs": "array([ 0.00615235,  0.6001898 ,  0.19430117,  1.        , -0.05827653,\n        0.66470647,  0.02      ,  0.        ,  0.        ,  0.        ,\n        1.        ,  0.        ,  0.        ,  0.        ,  0.        ,\n        0.        ,  0.        ,  0.        ])",
                "init_config": {
                  "obj_init_angle": 0.3,
                  "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                  "hand_init_pos": "array([0. , 0.6, 0.2])"
                },
                "goal": "array([0.1, 0.8, 0.2])",
                "obj_init_angle": 0.3,
                "obj_init_pos": "array([-0.05827653,  0.66470647,  0.02      ])",
                "goal_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True])",
                  "_shape": [
                    3
                  ],
                  "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                  "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                  "low_repr": "[-0.1   0.8   0.05]",
                  "high_repr": "[0.1 0.9 0.3]",
                  "_np_random": "None",
                  "$type": "gym.spaces.box.Box"
                },
                "num_resets": 1,
                "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_pick_place_v2.SawyerPickPlaceEnvV2"
              },
              "_max_episode_length": 500,
              "_render_modes": [
                "human"
              ],
              "_step_cnt": "None",
              "_visualize": false,
              "_action_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "_shape": [
                  4
                ],
                "low": "array([-1., -1., -1., -1.], dtype=float32)",
                "high": "array([1., 1., 1., 1.], dtype=float32)",
                "low_repr": "-1.0",
                "high_repr": "1.0",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                "_shape": [
                  39
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "_shape": [
                    39
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "_env_info": "None",
              "$type": "garage.envs.gym_env.GymEnv"
            },
            "_task_name": "pick-place-v2",
            "_task_id": "None",
            "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
          },
          "_task_index": 2,
          "_n_total_tasks": 3,
          "_observation_space": {
            "dtype": "dtype('float32')",
            "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
            "_shape": [
              42
            ],
            "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
            "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
            "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
            "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
            "_np_random": "None",
            "$type": "akro.box.Box"
          },
          "_spec": {
            "max_episode_length": 500,
            "input_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "_shape": [
                4
              ],
              "low": "array([-1., -1., -1., -1.], dtype=float32)",
              "high": "array([1., 1., 1., 1.], dtype=float32)",
              "low_repr": "-1.0",
              "high_repr": "1.0",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "_shape": [
                42
              ],
              "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
              "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
              "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
              "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
        },
        "_scale_reward": 1.0,
        "_normalize_obs": false,
        "_normalize_reward": false,
        "_expected_action_scale": 1.0,
        "_flatten_obs": true,
        "_obs_alpha": 0.001,
        "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
        "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
        "_reward_alpha": 0.001,
        "_reward_mean": 0.0,
        "_reward_var": 1.0,
        "$type": "garage.envs.normalized_env.NormalizedEnv"
      }
    ],
    "$type": "garage.envs.multi_env_wrapper.MultiEnvWrapper"
  },
  "_sampler": {
    "_worker_factory": {
      "n_workers": 2,
      "_seed": "None",
      "_max_episode_length": 500,
      "_worker_class": {
        "$typename": "garage.sampler.default_worker.DefaultWorker"
      },
      "_worker_args": {},
      "$type": "garage.sampler.worker_factory.WorkerFactory"
    },
    "_sampler_worker": {
      "__ray_metadata__": "<ray.actor._ActorClassMetadata object at 0x7f2e4bbb6430>",
      "_default_options": {},
      "$type": "garage.sampler.ray_sampler.ActorClass(SamplerWorker)"
    },
    "_agents": {
      "training": true,
      "_parameters": {},
      "_buffers": {},
      "_non_persistent_buffers_set": [],
      "_backward_hooks": {},
      "_forward_hooks": {},
      "_forward_pre_hooks": {},
      "_state_dict_hooks": {},
      "_load_state_dict_pre_hooks": {},
      "_modules": {
        "_module": {
          "training": true,
          "_parameters": {
            "_init_std": {
              "$type": "torch.nn.parameter.Parameter"
            }
          },
          "_buffers": {
            "min_std_param": {
              "$type": "torch.Tensor"
            }
          },
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_mean_module": {
              "training": true,
              "_parameters": {},
              "_buffers": {},
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 42.0,
                          "out_features": 64,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    },
                    "1": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 64,
                          "out_features": 64,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                },
                "_output_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 64,
                          "out_features": 4.0,
                          "$type": "torch.nn.modules.linear.Linear"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                }
              },
              "_output_dim": 4.0,
              "$type": "garage.torch.modules.mlp_module.MLPModule"
            }
          },
          "_input_dim": 42.0,
          "_hidden_sizes": [
            64,
            64
          ],
          "_action_dim": 4.0,
          "_learn_std": true,
          "_std_hidden_sizes": [
            32,
            32
          ],
          "_min_std": 1e-06,
          "_max_std": "None",
          "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
          "_std_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_std_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_std_output_nonlinearity": "None",
          "_std_output_w_init": {
            "$type": "builtins.function"
          },
          "_std_parameterization": "exp",
          "_hidden_nonlinearity": "<built-in method tanh of type object at 0x7f2ee9f455e0>",
          "_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_output_nonlinearity": "None",
          "_output_w_init": {
            "$type": "builtins.function"
          },
          "_output_b_init": {
            "$type": "builtins.function"
          },
          "_layer_normalization": false,
          "_norm_dist_class": {
            "$typename": "torch.distributions.normal.Normal"
          },
          "_min_std_param": {
            "$type": "torch.Tensor"
          },
          "_max_std_param": "None",
          "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
        }
      },
      "_env_spec": {
        "max_episode_length": 500,
        "input_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "_shape": [
            4
          ],
          "low": "array([-1., -1., -1., -1.], dtype=float32)",
          "high": "array([1., 1., 1., 1.], dtype=float32)",
          "low_repr": "-1.0",
          "high_repr": "1.0",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "output_space": {
          "dtype": "dtype('float32')",
          "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
          "_shape": [
            42
          ],
          "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
          "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
          "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
          "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
          "_np_random": "None",
          "$type": "akro.box.Box"
        },
        "$type": "garage._environment.EnvSpec"
      },
      "_name": "GaussianMLPPolicy",
      "_obs_dim": 42.0,
      "_action_dim": 4.0,
      "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
    },
    "_envs": [
      {
        "_sample_strategy": {
          "$type": "builtins.function"
        },
        "_num_tasks": 3,
        "_active_task_index": "None",
        "_mode": "vanilla",
        "_env": {
          "_env": {
            "_env": {
              "_env": {
                "_env": {
                  "frame_skip": 5,
                  "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                  "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                  "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                  "viewer": "None",
                  "_viewers": {},
                  "metadata": {
                    "render.modes": [
                      "human"
                    ],
                    "video.frames_per_second": 80
                  },
                  "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                  "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                  "_did_see_sim_exception": false,
                  "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                  "action_scale": 0.01,
                  "action_rot_scale": 1.0,
                  "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                  "hand_high": "array([0.5, 1. , 0.5])",
                  "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                  "mocap_high": "array([0.5, 1. , 0.5])",
                  "curr_path_length": 0,
                  "seeded_rand_vec": true,
                  "_freeze_rand_vec": true,
                  "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                  "discrete_goal_space": "None",
                  "discrete_goals": [],
                  "active_discrete_goal": "None",
                  "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                  "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                  "action_space": {
                    "dtype": "dtype('float64')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.])",
                    "high": "array([1., 1., 1., 1.])",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "gym.spaces.box.Box"
                  },
                  "isV2": true,
                  "_obs_obj_max_len": 14,
                  "_obs_obj_possible_lens": [
                    6,
                    14
                  ],
                  "_set_task_called": true,
                  "_partially_observable": false,
                  "hand_init_pos": "array([0. , 0.6, 0.2])",
                  "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                  "_random_reset_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                    "_shape": [
                      6
                    ],
                    "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                    "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                    "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                    "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                    "_np_random": "None",
                    "$type": "gym.spaces.box.Box"
                  },
                  "_last_stable_obs": "None",
                  "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                  "init_config": {
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                    "hand_init_pos": "array([0. , 0.6, 0.2])"
                  },
                  "goal": "array([-0.1,  0.8,  0.2])",
                  "obj_init_angle": 0.3,
                  "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                  "goal_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True])",
                    "_shape": [
                      3
                    ],
                    "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                    "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                    "low_repr": "[-0.1   0.8   0.05]",
                    "high_repr": "[0.1 0.9 0.3]",
                    "_np_random": "None",
                    "$type": "gym.spaces.box.Box"
                  },
                  "num_resets": 1,
                  "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                  "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
                },
                "_max_episode_length": 500,
                "_render_modes": [
                  "human"
                ],
                "_step_cnt": "None",
                "_visualize": false,
                "_action_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_observation_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "_shape": [
                    39
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_spec": {
                  "max_episode_length": 500,
                  "input_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "output_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "$type": "garage._environment.EnvSpec"
                },
                "_env_info": "None",
                "$type": "garage.envs.gym_env.GymEnv"
              },
              "_task_name": "reach-v2",
              "_task_id": "None",
              "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
            },
            "_task_index": 0,
            "_n_total_tasks": 3,
            "_observation_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "_shape": [
                42
              ],
              "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
              "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
              "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
              "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "_spec": {
              "max_episode_length": 500,
              "input_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "_shape": [
                  4
                ],
                "low": "array([-1., -1., -1., -1.], dtype=float32)",
                "high": "array([1., 1., 1., 1.], dtype=float32)",
                "low_repr": "-1.0",
                "high_repr": "1.0",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
          },
          "_scale_reward": 1.0,
          "_normalize_obs": false,
          "_normalize_reward": false,
          "_expected_action_scale": 1.0,
          "_flatten_obs": true,
          "_obs_alpha": 0.001,
          "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
          "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
          "_reward_alpha": 0.001,
          "_reward_mean": 0.0,
          "_reward_var": 1.0,
          "$type": "garage.envs.normalized_env.NormalizedEnv"
        },
        "_env_names": "None",
        "_task_envs": [
          {
            "_env": {
              "_env": {
                "_env": {
                  "_env": {
                    "frame_skip": 5,
                    "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                    "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                    "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                    "viewer": "None",
                    "_viewers": {},
                    "metadata": {
                      "render.modes": [
                        "human"
                      ],
                      "video.frames_per_second": 80
                    },
                    "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                    "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                    "_did_see_sim_exception": false,
                    "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                    "action_scale": 0.01,
                    "action_rot_scale": 1.0,
                    "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "hand_high": "array([0.5, 1. , 0.5])",
                    "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "mocap_high": "array([0.5, 1. , 0.5])",
                    "curr_path_length": 0,
                    "seeded_rand_vec": true,
                    "_freeze_rand_vec": true,
                    "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                    "discrete_goal_space": "None",
                    "discrete_goals": [],
                    "active_discrete_goal": "None",
                    "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                    "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                    "action_space": {
                      "dtype": "dtype('float64')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.])",
                      "high": "array([1., 1., 1., 1.])",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "isV2": true,
                    "_obs_obj_max_len": 14,
                    "_obs_obj_possible_lens": [
                      6,
                      14
                    ],
                    "_set_task_called": true,
                    "_partially_observable": false,
                    "hand_init_pos": "array([0. , 0.6, 0.2])",
                    "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                    "_random_reset_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                      "_shape": [
                        6
                      ],
                      "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                      "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                      "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "_last_stable_obs": "None",
                    "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                    "init_config": {
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                      "hand_init_pos": "array([0. , 0.6, 0.2])"
                    },
                    "goal": "array([-0.1,  0.8,  0.2])",
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                    "goal_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True])",
                      "_shape": [
                        3
                      ],
                      "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                      "low_repr": "[-0.1   0.8   0.05]",
                      "high_repr": "[0.1 0.9 0.3]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "num_resets": 1,
                    "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                    "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
                  },
                  "_max_episode_length": 500,
                  "_render_modes": [
                    "human"
                  ],
                  "_step_cnt": "None",
                  "_visualize": false,
                  "_action_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_observation_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_spec": {
                    "max_episode_length": 500,
                    "input_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "output_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "$type": "garage._environment.EnvSpec"
                  },
                  "_env_info": "None",
                  "$type": "garage.envs.gym_env.GymEnv"
                },
                "_task_name": "reach-v2",
                "_task_id": "None",
                "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
              },
              "_task_index": 0,
              "_n_total_tasks": 3,
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          },
          {
            "_env": {
              "_env": {
                "_env": {
                  "_env": {
                    "frame_skip": 5,
                    "model": "<mujoco_py.cymj.PyMjModel object at 0x5590749314a0>",
                    "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4b493c40>",
                    "data": "<mujoco_py.cymj.PyMjData object at 0x559074249af0>",
                    "viewer": "None",
                    "_viewers": {},
                    "metadata": {
                      "render.modes": [
                        "human"
                      ],
                      "video.frames_per_second": 80
                    },
                    "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                    "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                    "_did_see_sim_exception": false,
                    "_np_random": "Generator(PCG64) at 0x7F2E4BEFD9E0",
                    "action_scale": 0.01,
                    "action_rot_scale": 1.0,
                    "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "hand_high": "array([0.5, 1. , 0.5])",
                    "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "mocap_high": "array([0.5, 1. , 0.5])",
                    "curr_path_length": 0,
                    "seeded_rand_vec": true,
                    "_freeze_rand_vec": true,
                    "_last_rand_vec": "array([ 0.08191008,  0.69501554,  0.02      , -0.04610754,  0.8734471 ,\n        0.01182118])",
                    "discrete_goal_space": "None",
                    "discrete_goals": [],
                    "active_discrete_goal": "None",
                    "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                    "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                    "action_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "isV2": true,
                    "_obs_obj_max_len": 14,
                    "_obs_obj_possible_lens": [
                      6,
                      14
                    ],
                    "_set_task_called": true,
                    "_partially_observable": false,
                    "hand_init_pos": "array([0. , 0.6, 0.2])",
                    "_target_pos": "array([-0.04610754,  0.8734471 ,  0.01987216])",
                    "_random_reset_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                      "_shape": [
                        6
                      ],
                      "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.01], dtype=float32)",
                      "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.02], dtype=float32)",
                      "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.01]",
                      "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.02]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "_last_stable_obs": "None",
                    "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.08191008,\n       0.69501554, 0.01987216, 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                    "init_config": {
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                      "hand_init_pos": "array([0. , 0.6, 0.2])"
                    },
                    "goal": "array([0.1 , 0.8 , 0.02])",
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([0.08191008, 0.69501554, 0.01987216])",
                    "goal_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True])",
                      "_shape": [
                        3
                      ],
                      "low": "array([-0.1 ,  0.8 ,  0.01], dtype=float32)",
                      "high": "array([0.1 , 0.9 , 0.02], dtype=float32)",
                      "low_repr": "[-0.1   0.8   0.01]",
                      "high_repr": "[0.1  0.9  0.02]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "num_resets": 1,
                    "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                    "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_push_v2.SawyerPushEnvV2"
                  },
                  "_max_episode_length": 500,
                  "_render_modes": [
                    "human"
                  ],
                  "_step_cnt": "None",
                  "_visualize": false,
                  "_action_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_observation_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_spec": {
                    "max_episode_length": 500,
                    "input_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "output_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "$type": "garage._environment.EnvSpec"
                  },
                  "_env_info": "None",
                  "$type": "garage.envs.gym_env.GymEnv"
                },
                "_task_name": "push-v2",
                "_task_id": "None",
                "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
              },
              "_task_index": 1,
              "_n_total_tasks": 3,
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          },
          {
            "_env": {
              "_env": {
                "_env": {
                  "_env": {
                    "frame_skip": 5,
                    "model": "<mujoco_py.cymj.PyMjModel object at 0x559074237a80>",
                    "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4bc8b440>",
                    "data": "<mujoco_py.cymj.PyMjData object at 0x5590744212f0>",
                    "viewer": "None",
                    "_viewers": {},
                    "metadata": {
                      "render.modes": [
                        "human"
                      ],
                      "video.frames_per_second": 80
                    },
                    "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                    "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                    "_did_see_sim_exception": false,
                    "_np_random": "Generator(PCG64) at 0x7F2E4BEFDC80",
                    "action_scale": 0.01,
                    "action_rot_scale": 1.0,
                    "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "hand_high": "array([0.5, 1. , 0.5])",
                    "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "mocap_high": "array([0.5, 1. , 0.5])",
                    "curr_path_length": 0,
                    "seeded_rand_vec": true,
                    "_freeze_rand_vec": true,
                    "_last_rand_vec": "array([-0.05827653,  0.66470647,  0.02      , -0.09629089,  0.89126761,\n        0.11664289])",
                    "discrete_goal_space": "None",
                    "discrete_goals": [],
                    "active_discrete_goal": "None",
                    "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                    "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                    "action_space": {
                      "dtype": "dtype('float64')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.])",
                      "high": "array([1., 1., 1., 1.])",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "isV2": true,
                    "_obs_obj_max_len": 14,
                    "_obs_obj_possible_lens": [
                      6,
                      14
                    ],
                    "_set_task_called": true,
                    "_partially_observable": false,
                    "hand_init_pos": "array([0. , 0.6, 0.2])",
                    "_target_pos": "array([-0.09629089,  0.89126761,  0.11664289])",
                    "_random_reset_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                      "_shape": [
                        6
                      ],
                      "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                      "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                      "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "_last_stable_obs": "None",
                    "_prev_obs": "array([ 0.00615235,  0.6001898 ,  0.19430117,  1.        , -0.05827653,\n        0.66470647,  0.02      ,  0.        ,  0.        ,  0.        ,\n        1.        ,  0.        ,  0.        ,  0.        ,  0.        ,\n        0.        ,  0.        ,  0.        ])",
                    "init_config": {
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                      "hand_init_pos": "array([0. , 0.6, 0.2])"
                    },
                    "goal": "array([0.1, 0.8, 0.2])",
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([-0.05827653,  0.66470647,  0.02      ])",
                    "goal_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True])",
                      "_shape": [
                        3
                      ],
                      "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                      "low_repr": "[-0.1   0.8   0.05]",
                      "high_repr": "[0.1 0.9 0.3]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "num_resets": 1,
                    "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                    "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_pick_place_v2.SawyerPickPlaceEnvV2"
                  },
                  "_max_episode_length": 500,
                  "_render_modes": [
                    "human"
                  ],
                  "_step_cnt": "None",
                  "_visualize": false,
                  "_action_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_observation_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_spec": {
                    "max_episode_length": 500,
                    "input_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "output_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "$type": "garage._environment.EnvSpec"
                  },
                  "_env_info": "None",
                  "$type": "garage.envs.gym_env.GymEnv"
                },
                "_task_name": "pick-place-v2",
                "_task_id": "None",
                "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
              },
              "_task_index": 2,
              "_n_total_tasks": 3,
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          }
        ],
        "$type": "garage.envs.multi_env_wrapper.MultiEnvWrapper"
      },
      {
        "_sample_strategy": {
          "$type": "builtins.function"
        },
        "_num_tasks": 3,
        "_active_task_index": "None",
        "_mode": "vanilla",
        "_env": {
          "_env": {
            "_env": {
              "_env": {
                "_env": {
                  "frame_skip": 5,
                  "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                  "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                  "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                  "viewer": "None",
                  "_viewers": {},
                  "metadata": {
                    "render.modes": [
                      "human"
                    ],
                    "video.frames_per_second": 80
                  },
                  "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                  "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                  "_did_see_sim_exception": false,
                  "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                  "action_scale": 0.01,
                  "action_rot_scale": 1.0,
                  "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                  "hand_high": "array([0.5, 1. , 0.5])",
                  "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                  "mocap_high": "array([0.5, 1. , 0.5])",
                  "curr_path_length": 0,
                  "seeded_rand_vec": true,
                  "_freeze_rand_vec": true,
                  "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                  "discrete_goal_space": "None",
                  "discrete_goals": [],
                  "active_discrete_goal": "None",
                  "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                  "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                  "action_space": {
                    "dtype": "dtype('float64')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.])",
                    "high": "array([1., 1., 1., 1.])",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "gym.spaces.box.Box"
                  },
                  "isV2": true,
                  "_obs_obj_max_len": 14,
                  "_obs_obj_possible_lens": [
                    6,
                    14
                  ],
                  "_set_task_called": true,
                  "_partially_observable": false,
                  "hand_init_pos": "array([0. , 0.6, 0.2])",
                  "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                  "_random_reset_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                    "_shape": [
                      6
                    ],
                    "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                    "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                    "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                    "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                    "_np_random": "None",
                    "$type": "gym.spaces.box.Box"
                  },
                  "_last_stable_obs": "None",
                  "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                  "init_config": {
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                    "hand_init_pos": "array([0. , 0.6, 0.2])"
                  },
                  "goal": "array([-0.1,  0.8,  0.2])",
                  "obj_init_angle": 0.3,
                  "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                  "goal_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True])",
                    "_shape": [
                      3
                    ],
                    "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                    "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                    "low_repr": "[-0.1   0.8   0.05]",
                    "high_repr": "[0.1 0.9 0.3]",
                    "_np_random": "None",
                    "$type": "gym.spaces.box.Box"
                  },
                  "num_resets": 1,
                  "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                  "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
                },
                "_max_episode_length": 500,
                "_render_modes": [
                  "human"
                ],
                "_step_cnt": "None",
                "_visualize": false,
                "_action_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_observation_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                  "_shape": [
                    39
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "_spec": {
                  "max_episode_length": 500,
                  "input_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "output_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "$type": "garage._environment.EnvSpec"
                },
                "_env_info": "None",
                "$type": "garage.envs.gym_env.GymEnv"
              },
              "_task_name": "reach-v2",
              "_task_id": "None",
              "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
            },
            "_task_index": 0,
            "_n_total_tasks": 3,
            "_observation_space": {
              "dtype": "dtype('float32')",
              "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
              "_shape": [
                42
              ],
              "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
              "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
              "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
              "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
              "_np_random": "None",
              "$type": "akro.box.Box"
            },
            "_spec": {
              "max_episode_length": 500,
              "input_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "_shape": [
                  4
                ],
                "low": "array([-1., -1., -1., -1.], dtype=float32)",
                "high": "array([1., 1., 1., 1.], dtype=float32)",
                "low_repr": "-1.0",
                "high_repr": "1.0",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
          },
          "_scale_reward": 1.0,
          "_normalize_obs": false,
          "_normalize_reward": false,
          "_expected_action_scale": 1.0,
          "_flatten_obs": true,
          "_obs_alpha": 0.001,
          "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
          "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
          "_reward_alpha": 0.001,
          "_reward_mean": 0.0,
          "_reward_var": 1.0,
          "$type": "garage.envs.normalized_env.NormalizedEnv"
        },
        "_env_names": "None",
        "_task_envs": [
          {
            "_env": {
              "_env": {
                "_env": {
                  "_env": {
                    "frame_skip": 5,
                    "model": "<mujoco_py.cymj.PyMjModel object at 0x559074342e70>",
                    "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4be5e440>",
                    "data": "<mujoco_py.cymj.PyMjData object at 0x559074239cd0>",
                    "viewer": "None",
                    "_viewers": {},
                    "metadata": {
                      "render.modes": [
                        "human"
                      ],
                      "video.frames_per_second": 80
                    },
                    "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                    "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                    "_did_see_sim_exception": false,
                    "_np_random": "Generator(PCG64) at 0x7F2E4BEFD820",
                    "action_scale": 0.01,
                    "action_rot_scale": 1.0,
                    "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "hand_high": "array([0.5, 1. , 0.5])",
                    "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "mocap_high": "array([0.5, 1. , 0.5])",
                    "curr_path_length": 0,
                    "seeded_rand_vec": true,
                    "_freeze_rand_vec": true,
                    "_last_rand_vec": "array([ 0.06883221,  0.68667218,  0.02      , -0.08128602,  0.81390588,\n        0.11988334])",
                    "discrete_goal_space": "None",
                    "discrete_goals": [],
                    "active_discrete_goal": "None",
                    "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                    "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                    "action_space": {
                      "dtype": "dtype('float64')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.])",
                      "high": "array([1., 1., 1., 1.])",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "isV2": true,
                    "_obs_obj_max_len": 14,
                    "_obs_obj_possible_lens": [
                      6,
                      14
                    ],
                    "_set_task_called": true,
                    "_partially_observable": false,
                    "hand_init_pos": "array([0. , 0.6, 0.2])",
                    "_target_pos": "array([-0.08128602,  0.81390588,  0.11988334])",
                    "_random_reset_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                      "_shape": [
                        6
                      ],
                      "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                      "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                      "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "_last_stable_obs": "None",
                    "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.06883221,\n       0.68667218, 0.02      , 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                    "init_config": {
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                      "hand_init_pos": "array([0. , 0.6, 0.2])"
                    },
                    "goal": "array([-0.1,  0.8,  0.2])",
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([0.06883221, 0.68667218, 0.02      ])",
                    "goal_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True])",
                      "_shape": [
                        3
                      ],
                      "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                      "low_repr": "[-0.1   0.8   0.05]",
                      "high_repr": "[0.1 0.9 0.3]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "num_resets": 1,
                    "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                    "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_reach_v2.SawyerReachEnvV2"
                  },
                  "_max_episode_length": 500,
                  "_render_modes": [
                    "human"
                  ],
                  "_step_cnt": "None",
                  "_visualize": false,
                  "_action_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_observation_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_spec": {
                    "max_episode_length": 500,
                    "input_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "output_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "$type": "garage._environment.EnvSpec"
                  },
                  "_env_info": "None",
                  "$type": "garage.envs.gym_env.GymEnv"
                },
                "_task_name": "reach-v2",
                "_task_id": "None",
                "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
              },
              "_task_index": 0,
              "_n_total_tasks": 3,
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          },
          {
            "_env": {
              "_env": {
                "_env": {
                  "_env": {
                    "frame_skip": 5,
                    "model": "<mujoco_py.cymj.PyMjModel object at 0x5590749314a0>",
                    "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4b493c40>",
                    "data": "<mujoco_py.cymj.PyMjData object at 0x559074249af0>",
                    "viewer": "None",
                    "_viewers": {},
                    "metadata": {
                      "render.modes": [
                        "human"
                      ],
                      "video.frames_per_second": 80
                    },
                    "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                    "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                    "_did_see_sim_exception": false,
                    "_np_random": "Generator(PCG64) at 0x7F2E4BEFD9E0",
                    "action_scale": 0.01,
                    "action_rot_scale": 1.0,
                    "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "hand_high": "array([0.5, 1. , 0.5])",
                    "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "mocap_high": "array([0.5, 1. , 0.5])",
                    "curr_path_length": 0,
                    "seeded_rand_vec": true,
                    "_freeze_rand_vec": true,
                    "_last_rand_vec": "array([ 0.08191008,  0.69501554,  0.02      , -0.04610754,  0.8734471 ,\n        0.01182118])",
                    "discrete_goal_space": "None",
                    "discrete_goals": [],
                    "active_discrete_goal": "None",
                    "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                    "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                    "action_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "isV2": true,
                    "_obs_obj_max_len": 14,
                    "_obs_obj_possible_lens": [
                      6,
                      14
                    ],
                    "_set_task_called": true,
                    "_partially_observable": false,
                    "hand_init_pos": "array([0. , 0.6, 0.2])",
                    "_target_pos": "array([-0.04610754,  0.8734471 ,  0.01987216])",
                    "_random_reset_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                      "_shape": [
                        6
                      ],
                      "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.01], dtype=float32)",
                      "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.02], dtype=float32)",
                      "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.01]",
                      "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.02]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "_last_stable_obs": "None",
                    "_prev_obs": "array([0.00615235, 0.6001898 , 0.19430117, 1.        , 0.08191008,\n       0.69501554, 0.01987216, 0.        , 0.        , 0.        ,\n       1.        , 0.        , 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        ])",
                    "init_config": {
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                      "hand_init_pos": "array([0. , 0.6, 0.2])"
                    },
                    "goal": "array([0.1 , 0.8 , 0.02])",
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([0.08191008, 0.69501554, 0.01987216])",
                    "goal_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True])",
                      "_shape": [
                        3
                      ],
                      "low": "array([-0.1 ,  0.8 ,  0.01], dtype=float32)",
                      "high": "array([0.1 , 0.9 , 0.02], dtype=float32)",
                      "low_repr": "[-0.1   0.8   0.01]",
                      "high_repr": "[0.1  0.9  0.02]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "num_resets": 1,
                    "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                    "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_push_v2.SawyerPushEnvV2"
                  },
                  "_max_episode_length": 500,
                  "_render_modes": [
                    "human"
                  ],
                  "_step_cnt": "None",
                  "_visualize": false,
                  "_action_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_observation_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_spec": {
                    "max_episode_length": 500,
                    "input_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "output_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02 ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "$type": "garage._environment.EnvSpec"
                  },
                  "_env_info": "None",
                  "$type": "garage.envs.gym_env.GymEnv"
                },
                "_task_name": "push-v2",
                "_task_id": "None",
                "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
              },
              "_task_index": 1,
              "_n_total_tasks": 3,
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.01  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.02 , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.01    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.02  1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          },
          {
            "_env": {
              "_env": {
                "_env": {
                  "_env": {
                    "frame_skip": 5,
                    "model": "<mujoco_py.cymj.PyMjModel object at 0x559074237a80>",
                    "sim": "<mujoco_py.cymj.MjSim object at 0x7f2e4bc8b440>",
                    "data": "<mujoco_py.cymj.PyMjData object at 0x5590744212f0>",
                    "viewer": "None",
                    "_viewers": {},
                    "metadata": {
                      "render.modes": [
                        "human"
                      ],
                      "video.frames_per_second": 80
                    },
                    "init_qpos": "array([0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.6 ,\n       0.02, 1.  , 0.  , 0.  , 0.  ])",
                    "init_qvel": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])",
                    "_did_see_sim_exception": false,
                    "_np_random": "Generator(PCG64) at 0x7F2E4BEFDC80",
                    "action_scale": 0.01,
                    "action_rot_scale": 1.0,
                    "hand_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "hand_high": "array([0.5, 1. , 0.5])",
                    "mocap_low": "array([-0.5 ,  0.4 ,  0.05])",
                    "mocap_high": "array([0.5, 1. , 0.5])",
                    "curr_path_length": 0,
                    "seeded_rand_vec": true,
                    "_freeze_rand_vec": true,
                    "_last_rand_vec": "array([-0.05827653,  0.66470647,  0.02      , -0.09629089,  0.89126761,\n        0.11664289])",
                    "discrete_goal_space": "None",
                    "discrete_goals": [],
                    "active_discrete_goal": "None",
                    "init_left_pad": "array([0.00455658, 0.64733402, 0.19452415])",
                    "init_right_pad": "array([0.00774813, 0.55304542, 0.1940782 ])",
                    "action_space": {
                      "dtype": "dtype('float64')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.])",
                      "high": "array([1., 1., 1., 1.])",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "isV2": true,
                    "_obs_obj_max_len": 14,
                    "_obs_obj_possible_lens": [
                      6,
                      14
                    ],
                    "_set_task_called": true,
                    "_partially_observable": false,
                    "hand_init_pos": "array([0. , 0.6, 0.2])",
                    "_target_pos": "array([-0.09629089,  0.89126761,  0.11664289])",
                    "_random_reset_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True,  True,  True])",
                      "_shape": [
                        6
                      ],
                      "low": "array([-0.1 ,  0.6 ,  0.02, -0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1 , 0.7 , 0.02, 0.1 , 0.9 , 0.3 ], dtype=float32)",
                      "low_repr": "[-0.1   0.6   0.02 -0.1   0.8   0.05]",
                      "high_repr": "[0.1  0.7  0.02 0.1  0.9  0.3 ]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "_last_stable_obs": "None",
                    "_prev_obs": "array([ 0.00615235,  0.6001898 ,  0.19430117,  1.        , -0.05827653,\n        0.66470647,  0.02      ,  0.        ,  0.        ,  0.        ,\n        1.        ,  0.        ,  0.        ,  0.        ,  0.        ,\n        0.        ,  0.        ,  0.        ])",
                    "init_config": {
                      "obj_init_angle": 0.3,
                      "obj_init_pos": "array([0.  , 0.6 , 0.02])",
                      "hand_init_pos": "array([0. , 0.6, 0.2])"
                    },
                    "goal": "array([0.1, 0.8, 0.2])",
                    "obj_init_angle": 0.3,
                    "obj_init_pos": "array([-0.05827653,  0.66470647,  0.02      ])",
                    "goal_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True])",
                      "_shape": [
                        3
                      ],
                      "low": "array([-0.1 ,  0.8 ,  0.05], dtype=float32)",
                      "high": "array([0.1, 0.9, 0.3], dtype=float32)",
                      "low_repr": "[-0.1   0.8   0.05]",
                      "high_repr": "[0.1 0.9 0.3]",
                      "_np_random": "None",
                      "$type": "gym.spaces.box.Box"
                    },
                    "num_resets": 1,
                    "init_tcp": "array([0.00600364, 0.60047618, 0.14935032])",
                    "$type": "metaworld.envs.mujoco.sawyer_xyz.v2.sawyer_pick_place_v2.SawyerPickPlaceEnvV2"
                  },
                  "_max_episode_length": 500,
                  "_render_modes": [
                    "human"
                  ],
                  "_step_cnt": "None",
                  "_visualize": false,
                  "_action_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "_shape": [
                      4
                    ],
                    "low": "array([-1., -1., -1., -1.], dtype=float32)",
                    "high": "array([1., 1., 1., 1.], dtype=float32)",
                    "low_repr": "-1.0",
                    "high_repr": "1.0",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_observation_space": {
                    "dtype": "dtype('float32')",
                    "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                    "_shape": [
                      39
                    ],
                    "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                    "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                    "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                    "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                    "_np_random": "None",
                    "$type": "akro.box.Box"
                  },
                  "_spec": {
                    "max_episode_length": 500,
                    "input_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True])",
                      "_shape": [
                        4
                      ],
                      "low": "array([-1., -1., -1., -1.], dtype=float32)",
                      "high": "array([1., 1., 1., 1.], dtype=float32)",
                      "low_repr": "-1.0",
                      "high_repr": "1.0",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "output_space": {
                      "dtype": "dtype('float32')",
                      "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True])",
                      "_shape": [
                        39
                      ],
                      "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ], dtype=float32)",
                      "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  ], dtype=float32)",
                      "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05  ]",
                      "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3  ]",
                      "_np_random": "None",
                      "$type": "akro.box.Box"
                    },
                    "$type": "garage._environment.EnvSpec"
                  },
                  "_env_info": "None",
                  "$type": "garage.envs.gym_env.GymEnv"
                },
                "_task_name": "pick-place-v2",
                "_task_id": "None",
                "$type": "garage.envs.task_name_wrapper.TaskNameWrapper"
              },
              "_task_index": 2,
              "_n_total_tasks": 3,
              "_observation_space": {
                "dtype": "dtype('float32')",
                "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                "_shape": [
                  42
                ],
                "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                "_np_random": "None",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "_shape": [
                    4
                  ],
                  "low": "array([-1., -1., -1., -1.], dtype=float32)",
                  "high": "array([1., 1., 1., 1.], dtype=float32)",
                  "low_repr": "-1.0",
                  "high_repr": "1.0",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "bounded_below": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n        True,  True,  True,  True,  True,  True])",
                  "_shape": [
                    42
                  ],
                  "low": "array([-0.525 ,  0.348 , -0.0525, -1.    ,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf, -0.525 ,  0.348 , -0.0525,\n       -1.    ,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf,    -inf,    -inf,    -inf,    -inf,    -inf,    -inf,\n          -inf, -0.1   ,  0.8   ,  0.05  ,  0.    ,  0.    ,  0.    ],\n      dtype=float32)",
                  "high": "array([0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.525, 1.025, 0.7  , 1.   ,   inf,   inf,   inf,   inf,   inf,\n         inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,   inf,\n       0.1  , 0.9  , 0.3  , 1.   , 1.   , 1.   ], dtype=float32)",
                  "low_repr": "[-0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.525   0.348  -0.0525 -1.        -inf    -inf    -inf    -inf    -inf\n    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf    -inf\n -0.1     0.8     0.05    0.      0.      0.    ]",
                  "high_repr": "[0.525 1.025 0.7   1.      inf   inf   inf   inf   inf   inf   inf   inf\n   inf   inf   inf   inf   inf   inf 0.525 1.025 0.7   1.      inf   inf\n   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf   inf\n 0.1   0.9   0.3   1.    1.    1.   ]",
                  "_np_random": "None",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "$type": "garage.envs.task_onehot_wrapper.TaskOnehotWrapper"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1., 1., 1., 1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          }
        ],
        "$type": "garage.envs.multi_env_wrapper.MultiEnvWrapper"
      }
    ],
    "_all_workers": {
      "0": "Actor(SamplerWorker, eb4fa3183dae33c7e9c5df3f01000000)",
      "1": "Actor(SamplerWorker, 95bcb57d6d78a0f90d6c683301000000)"
    },
    "_workers_started": true,
    "total_env_steps": 0,
    "$type": "garage.sampler.ray_sampler.RaySampler"
  },
  "_plotter": "None",
  "_start_time": "None",
  "_itr_start_time": "None",
  "step_itr": "None",
  "step_episode": "None",
  "enable_logging": true,
  "_n_workers": "None",
  "_worker_class": "None",
  "_worker_args": "None",
  "$type": "garage.trainer.Trainer"
}